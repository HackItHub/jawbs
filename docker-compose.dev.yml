version: '3.8'

services:
  api:
    build:
      context: ./jawbs-server
      target: development
    container_name: jawbs-server-dev
    ports:
      - '${PORT}:3001'
      - '${DEBUG}:9229'
      - '${EMAIL_PORT}:452'
    env_file: ./.env
    environment:
      EMAIL_HOST: ${EMAIL_HOST}
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    volumes:
      - ./jawbs-server:/usr/src/app
    depends_on:
      - postgres
    stdin_open: true
    tty: true
    restart: always
    networks:
      - jawbs
    command: npm run dev
  prisma-studio:
    build:
      context: ./jawbs-server
      target: prisma-studio
    container_name: prisma-studio-dev
    ports:
      - '${PRISMA_STUDIO}:5555'
    command: npm run studio
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    depends_on:
      - api
      - postgres
    networks:
      - jawbs
    volumes:
      - ./jawbs-server:/usr/src/app
  client:
    build:
      context: ./jawbs-client
      target: development
    container_name: jawbs-client-dev
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true
    volumes:
      - ./jawbs-client:/usr/src/app
    environment:
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
    restart: always
    depends_on:
      - postgres
      - api
    networks:
      - jawbs
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - '${DB_PORT}:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - jawbs
  # postgres-test:
  #   image: postgres:latest
  #   ports:
  #     - '${POSTGRES_TESTING_PORT}:5433'
  #   environment:
  #     POSTGRES_USER: testuser
  #     POSTGRES_PASSWORD: testpassword
  #     POSTGRES_DB: testdb
  #   networks:
  #     - jawbs
networks:
  jawbs:
    driver: bridge

volumes:
  postgres: ~
